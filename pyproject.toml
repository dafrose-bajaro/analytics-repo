[project]
name = "analytics-repo"
version = "0.1.0"
description = "Analytics Repo"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "dagster",
    "dagster-graphql",
    "dagster-webserver",
    "dagster-postgres",
    "dagster-gcp",
    "dagster-dbt",
    "dagster-deltalake",
    "dagster-deltalake-polars",
    "dagster-polars",
    "dagster-duckdb-polars",
    "dagster-aws",
    "dagster-obstore",

    "pandas",
    "geopandas",
    "numpy",
    "shapely",
    "polars",
    "jupyter",

    "beautifulsoup4",
    "requests",

    "duckdb",
    "dbt-core",
    "dbt-duckdb",

    "pyyaml",
    "toml",

    "httpx",

    "country-converter",
    "matplotlib",
    "pydantic",
    "pydantic-settings"
]

[tool.uv]
package = false

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.dagster]
module_name = "src.definitions"

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "C", "B", "UP"]
ignore = ["E203", "E266", "E501", "E402"]
ignore-init-module-imports = true

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["pydantic.validator"]

[tool.sqlfluff.core]
dialect = "duckdb"
templater = "jinja"
sql_file_exts = ".sql,.sql.j2,.dml,.ddl"
max_line_length = 88

[tool.sqlfluff.indentation]
indented_joins = false
indented_using_on = true
template_blocks_indent = false

[tool.sqlfluff.templater]
unwrap_wrapped_queries = true

[tool.sqlfluff.templater.jinja]
apply_dbt_builtins = true

[tool.sqlfluff.templater.dbt]
project_dir = "./"

[tool.sqlfluff.rules.capitalisation.keywords]
capitalisation_policy = "upper"

[tool.jupysql.SqlMagic]
autolimit = false
autopolars = true
feedback = 1
named_parameters = "enabled"
